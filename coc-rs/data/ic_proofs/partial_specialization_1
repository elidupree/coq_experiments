P1. All P

A1. ∀A, (const (const A) = fuse (const (const A)))

1. (A => (const (const A) = fuse (const (const A)))) True      [A1, by specialization]
2. (const (const True) = fuse (const (const True)))           [1, by unfolding]
3. const P = fuse (const P)                                   [P1, 2, by substitution]
4. const P A = P
5. fuse (const P) A = P
6. P = fuse (const P) A                                       [5, by eq_sym]
7. ∀b, P (A b)                                                [6, P1, by substitution]
# (= All (fuse (const P) A))
