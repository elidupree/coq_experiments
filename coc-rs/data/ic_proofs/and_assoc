ignore:
#1. ((A & B) & C) =



#A1. ((A, B) = (C, D)) = ((A = C) & (B = D))
#A2. ((A, B) = (C, D)) = ((B, A) = (D, C))

#let rotate1 = (ac => e => ac(a => c => (a, (c, e)))
#let rotate2 = (a => ce => ce(c => e => ((a, c), e))
1. ((A=B) & (C=D)) & (E=F)...
#2. = ((A,C) = (B,D)) & (E=F)
#3. = ((A,C),E) = ((B,D),F)
4. = (((A,C),E) = ((B,D),F)) & (((A,C),E)(ac => e => ac(a => c => (a, (c, e)))) = ((B,D),F)(ac => e => ac(a => c => (a, (c, e)))))   [by internal_specialization]
5. = (((A,C),E) = ((B,D),F)) & ((A,(C,E)) = (B,(D,F)))  [by unfolding]
6. = ((A,(C,E)) = (B,(D,F))) & (((A,C),E) = ((B,D),F))  [by and_sym]
7. = ((A,(C,E)) = (B,(D,F))) & ((A,(C,E))(a => ce => ce(c => e => ((a, c), e))) = (B,(D,F))(a => ce => ce(c => e => ((a, c), e))))  [by folding]
8. = ((A,(C,E)) = (B,(D,F)))   [by internal_specialization]
#9. = (A=B) & ((C,E) = (D,F))
#10. = (A=B) & ((C=D) & (E=F))